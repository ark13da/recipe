{"version":3,"sources":["components/header/header.js","components/footer/footer.js","components/main/home.js","components/main/about.js","components/main/RecipeCard.js","components/main/SingleRecipe.js","components/main/recipes.js","components/main/Newrecipe.js","App.js","index.js"],"names":["Nav","className","to","Header","src","alt","Footer","Home","About","RecipeCard","name","image","link","SingleRecipe","id","useParams","useState","newRecipe","setNewRecipe","history","useHistory","useEffect","axios","get","then","res","data","recipeData","undefined","ingredients","map","i","instructions","Button","variant","onClick","goBack","Recipes","useRouteMatch","path","url","recipeList","setRecipeList","isLoading","setIsLoading","searchTerm","setSearchTerm","searchExists","setSearchExists","myFunc","a","length","searchMatch","filter","toLowerCase","document","getElementById","innerHTML","setTimeout","InputGroup","FormControl","placeholder","aria-label","aria-describedby","onChange","e","target","value","Append","exact","item","Newrecipe","ingList","setIngList","changeHandler","newTextField","Form","Control","type","onSubmit","preventDefault","post","JSON","stringify","window","location","href","Group","Label","required","indexOf","prevState","as","rows","plceholder","block","App","component","ReactDOM","render"],"mappings":"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","file":"static/js/main.74fd9ec1.chunk.js","sourcesContent":["import React from 'react';\r\nimport \"./header.css\";\r\nimport { NavLink } from \"react-router-dom\";\r\n\r\nconst Nav = () => {\r\n    return (\r\n      <div>\r\n        <ul className=\"topNav\">\r\n          <li>\r\n            <NavLink to=\"/\">Home</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/recipes\">Recipes</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/newRecipe\">Add</NavLink>\r\n          </li>\r\n          <li>\r\n            <NavLink to=\"/about\">About</NavLink>\r\n          </li>\r\n        </ul>\r\n      </div>\r\n    );\r\n};\r\n\r\n\r\nconst Header = () => {\r\n  return (\r\n    <div className=\"headBar\">\r\n      <h4 className=\"topLogo\">\r\n        <NavLink to=\"/\">\r\n          <img\r\n            className=\"logo\"\r\n            src=\"https://freepngimg.com/thumb/cooking/29443-1-cooking-file-thumb.png\"\r\n            alt=\"logo\"\r\n          />\r\n        </NavLink>\r\n      </h4>\r\n      <Nav />\r\n    </div>\r\n  );\r\n};\r\n\r\nexport default Header;","\r\nimport \"./footer.css\";\r\n\r\n\r\nconst Footer = () => {\r\n\r\n    \r\n    return (\r\n      <div className=\"footBar\">\r\n        <div className=\"borderShort\"></div>\r\n       <p>No Copy rights</p>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default Footer;","import React from 'react';\r\nimport \"./home.css\";\r\n\r\nconst Home = () => {\r\n    return (\r\n        <div>\r\n            <div className=\"heroBanner\">  \r\n            </div>\r\n            <div className=\"homeIntro\">\r\n                <h1>Welsome to Alireza's kitchen</h1>\r\n                <h3>Here you can find recipies for some delicion eats.</h3>\r\n                <h4>Enjoy!</h4>\r\n            </div>\r\n        </div>\r\n    );\r\n};\r\n\r\nexport default Home;","import React from 'react';\r\nimport \"./about.css\";\r\n\r\nconst About = () => {\r\n    return (\r\n      <div className=\"aboutContent\">\r\n        <h1>About</h1>\r\n        <p>\r\n                This project was done as a homework at react21k course in business\r\n                college helsinki.\r\n        </p>\r\n            <br/>\r\n        <p>\r\n          The recipes are fetched from an API provided at\r\n          'https://api.spoonacular.com'. since a free version of the API is being\r\n          used, it has daily request limit. thus, a list of some 95 recipes was fetched using PHP and was saved in a json file where the front end of the application can list recipes from.\r\n        </p>\r\n      </div>\r\n    );\r\n};\r\n\r\nexport default About;","import React from 'react';\r\nimport { Link } from \"react-router-dom\";\r\n\r\nconst RecipeCard = ({ name, image, link }) => {\r\n    \r\n  return (\r\n    <>\r\n      <div className=\"recipe\">\r\n        <Link to={link}>\r\n          <img className=\"thumbnail\" src={image} alt=\"foodPic\" />\r\n          <p className=\"foodTitle\">{name}</p>\r\n        </Link>\r\n      </div>\r\n    </>\r\n  );\r\n};\r\n\r\nexport default RecipeCard;","import React, { useEffect, useState } from \"react\";\r\nimport { useHistory, useParams } from \"react-router-dom\";\r\nimport axios from \"axios\";\r\nimport { Button} from \"react-bootstrap\";\r\n\r\nconst SingleRecipe = () => {\r\n    let { id } = useParams();\r\n    const [newRecipe, setNewRecipe] = useState();\r\n    let history = useHistory();\r\n\r\n    useEffect(() => {\r\n      if (!newRecipe) {\r\n        axios\r\n          .get(\"https://mysterious-shore-28269.herokuapp.com/recipe/find/\" + id)\r\n          .then((res) => {\r\n            setNewRecipe(res.data);\r\n          });\r\n      }\r\n    });\r\n\r\n    let recipeData = undefined;\r\n    if (!newRecipe) {\r\n      recipeData = <div>Loading...</div>;\r\n    } else {\r\n        recipeData = (\r\n          <>\r\n            <div className=\"recipesContent\">\r\n              <div className=\"recipeSinglePart\">\r\n                <img\r\n                  className=\"thumbnail\"\r\n                  src={newRecipe.image}\r\n                  alt=\"foodPic\"\r\n                />\r\n              </div>\r\n              <div className=\"recipeSinglePart\">\r\n                <h2 className=\"foodTitle\">{newRecipe.name}</h2>\r\n                <h4>Ingredients:</h4>\r\n                <ul>\r\n                  {newRecipe.ingredients.map((i) => (\r\n                    <li key={i}>{i}</li>\r\n                  ))}\r\n                </ul>\r\n                <h4>Instructions:</h4>\r\n                <p>{newRecipe.instructions}</p>\r\n              </div>\r\n            </div>\r\n            <Button variant=\"warning\" onClick={() => history.goBack()}>\r\n              Go back\r\n            </Button>\r\n          </>\r\n        );\r\n    }\r\n    return <div>{recipeData}</div>;\r\n};\r\n\r\nexport default SingleRecipe;\r\n","import React, { useEffect,useState} from 'react';\r\nimport \"./recipes.css\";\r\nimport RecipeCard from \"./RecipeCard.js\";\r\nimport SingleRecipe from \"./SingleRecipe.js\";\r\nimport axios from \"axios\";\r\nimport { Switch, Route, useRouteMatch } from \"react-router-dom\";\r\nimport { Button, InputGroup, FormControl } from \"react-bootstrap\";\r\n\r\nconst Recipes =()=> {\r\n  let { path, url } = useRouteMatch();\r\n  const [recipeList, setRecipeList] = useState([]);\r\n  const [isLoading, setIsLoading] = useState(true);\r\n  const [searchTerm, setSearchTerm] = useState(\"\");\r\n  const [searchExists, setSearchExists] = useState(\"\");\r\n  //let history = useHistory();\r\n\r\n  const changeHandler = (e) => {\r\n    setSearchTerm(e.target.value);\r\n  };\r\n\r\n  const searchHandler = () => {\r\n    setSearchExists(searchTerm);\r\n    setSearchTerm(\"\");\r\n    \r\n  };\r\n  const clearHandler = () => {\r\n    setSearchExists('');\r\n    setSearchTerm('');\r\n    document.getElementById(\"search\").value = \"\";\r\n  };\r\n\r\n\r\n  useEffect(() => {\r\n    setIsLoading(true);\r\n\r\n    const myFunc = async () => {\r\n      let res = await axios.get(\r\n        \"https://mysterious-shore-28269.herokuapp.com/recipe/all\"\r\n      );\r\n      if (searchExists.length) {\r\n        let searchMatch = res.data.filter(\r\n          (i) => i.name.toLowerCase() === searchExists.toLowerCase()\r\n        );\r\n        setRecipeList(searchMatch);\r\n        document.getElementById(\"search\").innerHTML = \"\";\r\n      } else {\r\n        setRecipeList(res.data);\r\n      }\r\n    };\r\n    setTimeout(\r\n      () => {\r\n        myFunc();\r\n        setIsLoading(false);  \r\n      }, 1000);\r\n\r\n    \r\n  }, [searchExists]);\r\n\r\n\r\n  if (isLoading) {\r\n    return (\r\n      <div className=\"marginTop\">\r\n        <p>Loading...</p>\r\n      </div>\r\n    );\r\n  } else {\r\n    return (\r\n      <div className=\"marginTop\">\r\n        <InputGroup className=\"mb-3 w-50\">\r\n          <FormControl\r\n            placeholder=\"Search recipe\"\r\n            aria-label=\"Search recipe\"\r\n            aria-describedby=\"basic-addon2\"\r\n            onChange={changeHandler}\r\n            id=\"search\"\r\n          />\r\n          <InputGroup.Append>\r\n            <Button variant=\"warning\" onClick={searchHandler}>\r\n              Search\r\n            </Button>\r\n            <Button variant=\"danger\" onClick={clearHandler}>\r\n              Clear\r\n            </Button>\r\n          </InputGroup.Append>\r\n        </InputGroup>\r\n\r\n        <div className=\"recipesContent\">\r\n          <Switch>\r\n            <Route path=\"/recipes\" exact>\r\n              {recipeList.map((item) => (\r\n                <RecipeCard\r\n                  key={item.id}\r\n                  link={`${url}/${item.id}`}\r\n                  image={item.image}\r\n                  name={item.name}\r\n                />\r\n              ))}\r\n            </Route>\r\n            <Route path={`${path}/:id`}>\r\n              <SingleRecipe />\r\n            </Route>\r\n          </Switch>\r\n        </div>\r\n      </div>\r\n    );\r\n  }\r\n\r\n}\r\n\r\nexport default Recipes;\r\n","import React, { useState} from 'react';\r\nimport \"./recipes.css\";\r\nimport { Button,Form} from \"react-bootstrap\";\r\nimport axios from \"axios\";\r\n\r\n\r\nconst Newrecipe = () => {\r\n  let [ingList, setIngList] = useState([]);\r\n  \r\n  const addListing = () => {\r\n    setIngList((prevState) => [...prevState, newTextField]);\r\n  }\r\nconst [newRecipe, setNewRecipe] = useState({\r\n  name: \"\",\r\n  image: \"\",\r\n  ingredients: [],\r\n  instructions: \"\",\r\n});\r\n\r\nconst changeHandler = (e) => {\r\n  setNewRecipe({ ...newRecipe, [e.target.name]: e.target.value });\r\n};\r\nconst lsitHandler = (e) => {\r\n  setNewRecipe({\r\n    ...newRecipe,\r\n    ingredients: [...newRecipe.ingredients, e.target.value],\r\n  });\r\n};\r\nconst submitHandler = (e) => {\r\n  e.preventDefault();\r\n  axios\r\n    .post(\r\n      \"https://mysterious-shore-28269.herokuapp.com/recipe/add\",\r\n      JSON.stringify(newRecipe)\r\n    )\r\n    .then((res) => (window.location.href = \"/\"));\r\n  };\r\n  const newTextField = (\r\n    <Form.Control\r\n      type=\"text\"\r\n      id=\"ingredients\"\r\n      name=\"ingredients\"\r\n      placeholder=\"ingredient\"\r\n      onChange={lsitHandler}\r\n    />\r\n  );\r\n\r\n    return (\r\n      <div className=\"marginTop\">\r\n        <h3>Add new recipe</h3>\r\n        <Form className=\"w-75\" onSubmit={submitHandler}>\r\n          <Form.Group>\r\n            <Form.Label>Name</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              id=\"name\"\r\n              name=\"name\"\r\n              placeholder=\"Name\"\r\n              required\r\n              onChange={changeHandler}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Image</Form.Label>\r\n            <Form.Control\r\n              type=\"text\"\r\n              id=\"image\"\r\n              name=\"image\"\r\n              placeholder=\"Image\"\r\n              required\r\n              onChange={changeHandler}\r\n            />\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Ingredients</Form.Label>\r\n            {ingList.map((i) => (\r\n              <div key={ingList.indexOf(i)}>{i}</div>\r\n            ))}\r\n            <div>\r\n              <Button\r\n                type=\"button\"\r\n                variant=\"outline-danger\"\r\n                onClick={addListing}\r\n              >\r\n                + Add ingredient\r\n              </Button>\r\n            </div>\r\n          </Form.Group>\r\n          <Form.Group>\r\n            <Form.Label>Instructions</Form.Label>\r\n            <Form.Control\r\n              as=\"textarea\"\r\n              rows={3}\r\n              id=\"instructions\"\r\n              name=\"instructions\"\r\n              plceholder=\"instructions\"\r\n              required\r\n              onChange={changeHandler}\r\n            />\r\n          </Form.Group>\r\n\r\n          <Button type=\"submit\" variant=\"warning\" block>\r\n            Submit\r\n          </Button>\r\n        </Form>\r\n      </div>\r\n    );\r\n    \r\n};\r\n\r\nexport default Newrecipe;","import React from \"react\";\nimport './App.css';\nimport Header from \"./components/header/header.js\"\nimport Footer from \"./components/footer/footer.js\"\nimport Home from \"./components/main/home.js\"\nimport About from \"./components/main/about.js\"\nimport Recipes from \"./components/main/recipes.js\"\nimport Newrecipe from \"./components/main/Newrecipe.js\";\n\nimport { BrowserRouter as Router, Switch, Route} from \"react-router-dom\";\n\nfunction App() {\n  return (\n    <div className=\"motherContainer\">\n      <Router>\n        <Header />\n        <div className=\"content\">\n          <Switch>\n            <Route path=\"/\" exact component={Home} />\n            <Route path=\"/about\" component={About} />\n            <Route path=\"/recipes\" component={Recipes} />\n            <Route path=\"/newRecipe\" component={Newrecipe} />\n          </Switch>\n        </div>\n        <Footer />\n      </Router>\n    </div>\n  );\n}\n\nexport default App;\n","import React from 'react';\nimport ReactDOM from 'react-dom';\nimport \"bootstrap/dist/css/bootstrap.min.css\";\nimport './index.css';\nimport App from './App';\n\n\n\nReactDOM.render(\n    <App />,\n  document.getElementById('root')\n);\n\n"],"sourceRoot":""}